openapi: 3.0.0
servers:
  - url: /
info:
  title: Users
  version: 1.0.0
  description: |
    An API used to drive tests.
    Lots of inconsistencies and odd design choices used to test edge cases -
    not recommended as a good example of API design :)
tags:
  - name: user
    description: Operations related to Users
paths:
  /users:
    get:
      tags:
        - user
      summary: Get all users
      operationId: get all users
      security:
        - basic:
            - read_users
      parameters:
        - name: maxCount
          in: cookie
          description: The maximum number of results to return
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
        - name: filter
          in: cookie
          description: The IDs include in the results
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: number
              format: int32
            maxItems: 10
        - name: sorting
          in: cookie
          description: >-
            Comma-separated sorting fields (created only for testing that query
            parameters are not split!)
          required: false
          schema:
            type: string
            enum:
              - 'name,email'
      responses:
        '200':
          description: Users response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: Unauthenticated
        default:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    basic:
      x-authorize: auth.js
      type: http
      scheme: basic
    bearer:
      type: apiKey
      name: Authorization
      in: header
      description: Authentication by a bearer token
    queryParam:
      type: apiKey
      name: authorization
      in: cookie
      description: Authentication by a cookie parameter
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
      required:
        - id
        - name
        - email
    Error:
      type: object
      properties:
        title:
          type: string
        message:
          type: string
      required:
        - title
        - message
